{"version":3,"sources":["services/EmployeeService.js","components/ListEmployeeComponent.jsx","components/HeaderComponent.jsx","components/FooterComponent.jsx","components/CreateEmployeeComponent.jsx","components/ViewEmployeeComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["EMPLOYEE_API_BASE_URL","axios","get","employee","post","employeeId","put","delete","ListEmployeeComponent","props","state","employees","addEmployee","bind","editEmployee","deleteEmployee","id","this","history","push","EmployeeService","getEmployees","then","res","setState","data","filter","className","style","width","marginBottom","onClick","map","firstName","lastName","emailId","marginLeft","viewEmployee","Component","HeaderComponent","FooterComponent","CreateEmployeeComponent","saveOrUpdateEmployee","e","preventDefault","console","log","JSON","stringify","createEmployee","updateEmployee","changeFirstNameHandler","event","target","value","changeLastNameHandler","changeEmailHandler","match","params","getEmployeeById","paddingBottom","getTitle","placeholder","name","onChange","marginTop","cancel","ViewEmployeeComponent","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70115be5.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst EMPLOYEE_API_BASE_URL = \"http://localhost:8080/api/v1/employees\";\n\nclass EmployeeService {\n    getEmployees(){\n        return axios.get(EMPLOYEE_API_BASE_URL);\n    }\n    createEmployee(employee){\n        return axios.post(EMPLOYEE_API_BASE_URL, employee);\n    }\n    getEmployeeById(employeeId){\n        return axios.get(EMPLOYEE_API_BASE_URL+ '/' + employeeId);\n    }\n    updateEmployee(employee, employeeId){\n        return axios.put(EMPLOYEE_API_BASE_URL + '/' + employeeId, employee);\n    }\n    deleteEmployee(employeeId){\n        return axios.delete(EMPLOYEE_API_BASE_URL + '/' + employeeId);\n    }\n}\n\nexport default new EmployeeService()","import React, { Component } from 'react'\nimport EmployeeService from '../services/EmployeeService'\n\nexport default class ListEmployeeComponent extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            employees: []\n        }\n        this.addEmployee = this.addEmployee.bind(this);\n        this.editEmployee = this.editEmployee.bind(this);\n        this.deleteEmployee = this.deleteEmployee.bind(this);\n    }\n\n    viewEmployee(id){\n        this.props.history.push(`view-employee/${id}`);\n    }\n\n    editEmployee(id){\n        this.props.history.push(`/add-employee/${id}`);\n    }\n\n    componentDidMount(){\n        EmployeeService.getEmployees().then((res) => {\n            this.setState({ employees: res.data});\n        });\n    }\n\n    addEmployee(){\n        this.props.history.push('/add-employee/_add');\n    }\n\n    deleteEmployee(id){\n        EmployeeService.deleteEmployee(id).then( res => {\n            this.setState({employees: this.state.employees.filter(employee => employee.id !== id)});\n        });\n    }\n    render() {\n        return (\n            <div>\n                <h2 className=\"text-center\">\n                    Employees List\n                </h2>\n                <div className = \"row\">\n                    <button className = \"btn btn-light\" style =  {{width: \"10%\", marginBottom: \"1rem\"}} onClick = {this.addEmployee}> Add Employee </button>\n                </div>\n                <div className=\"row\">\n                    <table className=\"table table-striped table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>\n                                    Employee First Name\n                                </th>\n                                <th>\n                                    Employee Last Name\n                                </th>\n                                <th>\n                                    Employee Email Id\n                                </th>\n                                <th>\n                                    Actions\n                                </th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {\n                                this.state.employees.map(\n                                    employee => \n                                    <tr key = {employee.id}>\n                                        <td>\n                                            {employee.firstName}\n                                        </td>\n                                        <td>\n                                            {employee.lastName}\n                                        </td>\n                                        <td>\n                                            {employee.emailId}\n                                        </td>\n                                        <td>\n                                            <button onClick = {() => this.editEmployee(employee.id)} className = \"btn btn-outline-dark\">Update</button>\n                                            <button onClick = {() => this.deleteEmployee(employee.id)} className = \"btn btn-outline-danger\" style = {{marginLeft: \"10px\"}}>Delete</button>\n                                            <button onClick = {() => this.viewEmployee(employee.id)} className = \"btn btn-outline-info\" style = {{marginLeft: \"10px\"}}>View</button>\n                                        </td>\n                                    </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class HeaderComponent extends Component {\n    render() {\n        return (\n            <div>\n                <header>\n                    <nav className = \"navbar navbar-expand-md navbar-dark bg-dark\">\n                        <div>\n                            <a className = \"navbar-brand\">\n                                Employee Management Portal\n                            </a>\n                        </div>\n                    </nav>\n                </header>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class FooterComponent extends Component {\n    render() {\n        return (\n            <div>\n                <footer className = \"footer\">\n                    <span className = \"text-muted\">\n                        All Rights Reserved 2021 @ShreyashLata\n                    </span>\n                </footer>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport EmployeeService from '../services/EmployeeService';\n\nexport default class CreateEmployeeComponent extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            id: this.props.match.params.id,\n            firstName: '',\n            lastName: '',\n            emailId: ''\n        }\n        this.changeFirstNameHandler = this.changeFirstNameHandler.bind(this);\n        this.changeLastNameHandler = this.changeLastNameHandler.bind(this);\n        this.changeEmailHandler = this.changeEmailHandler.bind(this);\n        this.saveOrUpdateEmployee = this.saveOrUpdateEmployee.bind(this);\n    }\n\n    conponentDidMount(){\n        if(this.state.id === '_add'){\n            return\n        }\n        EmployeeService.getEmployeeById(this.state.id).then((res) => {\n            let employee = res.data;\n            this.setState({\n                firstName: employee.firstName,\n                lastName:employee.lastName,\n                emailId: employee.emailId\n            });\n        });\n    }\n\n    saveOrUpdateEmployee=(e)=>{\n        e.preventDefault();\n        let employee = {firstName: this.state.firstName, lastName: this.state.lastName, emailId: this.state.emailId};\n        console.log('employee --' + JSON.stringify(employee));\n        console.log(\"hi\");\n        if(this.state.id === '_add'){\n            EmployeeService.createEmployee(employee).then(res => {\n            this.props.history.push('/employees');\n            });\n        }\n        else{\n            EmployeeService.updateEmployee(employee, this.state.id).then(res => {\n                this.props.history.push('/employees');\n            });\n        }\n    }\n    changeFirstNameHandler=(event)=>{\n        this.setState({firstName: event.target.value});\n    }\n    changeLastNameHandler=(event)=>{\n        this.setState({lastName: event.target.value});\n    }\n    changeEmailHandler=(event)=>{\n        this.setState({emailId: event.target.value});\n    }\n    cancel(){\n        this.props.history.push('/employees');\n    }\n    getTitle(){\n        if(this.state.id === '_add'){\n            return <h3 className = \"text-center\" style = {{paddingBottom: \"5px\"}}>Add Employee</h3>;           \n        }\n        else{\n            return <h3 className = \"text-center\" style = {{paddingBottom: \"5px\"}}>Update Employee</h3>;\n        }\n    }\n    render() {\n        return (\n            <div>\n                <div className = \"container\">\n                    <div className = \"row\">\n                        <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n                            {\n                                this.getTitle()\n                            }\n                            <div className = \"card-body\">\n                                <form>\n                                    <div className = \"form-group\">\n                                        <label>First Name:</label>\n                                        <input placeholder = \"FirstName\" name = \"firstName\" className = \"form-control\"\n                                            value = {this.state.firstName} onChange = {this.changeFirstNameHandler}/>\n                                    </div>\n                                    <div className = \"form-group\">\n                                        <label>Last Name:</label>\n                                        <input placeholder = \"LastName\" name = \"lastName\" className = \"form-control\"\n                                            value = {this.state.lastName} onChange = {this.changeLastNameHandler}/>\n                                    </div>\n                                    <div className = \"form-group\">\n                                        <label>Email Id:</label>\n                                        <input placeholder = \"Email Address\" name = \"emailId\" className = \"form-control\"\n                                            value = {this.state.emailId} onChange = {this.changeEmailHandler}/>\n                                    </div>\n                                    <button className = \"btn btn-success\" onClick = {this.saveOrUpdateEmployee} style = {{marginTop: \"10px\"}}>Save</button>\n                                    <button className = \"btn btn-danger\" onClick = {this.cancel.bind(this)} style = {{marginLeft: \"10px\", marginTop: \"10px\"}}>Cancel</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport EmployeeService from '../services/EmployeeService'\n\nexport default class ViewEmployeeComponent extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            employee: {}\n        }\n    }\n\n    componentDidMount(){\n        EmployeeService.getEmployeeById(this.state.id).then(res => {\n            this.setState({employee: res.data});\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className = \"card col-md-6 offset-md-3\">\n                    <h3 className = \"text-center\">\n                        View Employee Details\n                    </h3>\n                    <div className = \"card-body\">\n                        <div className = \"row\">\n                            <label> Employee First Name:</label>\n                            <label className = \"badge bg-primary text-wrap\" style = {{width: \"20rem\", marginLeft: \"200px\"}}>\n                                {this.state.employee.firstName}\n                            </label>\n                        </div>\n                        <div className = \"row\">\n                            <label> Employee Last Name:</label>\n                            <div className = \"badge bg-primary text-wrap\" style = {{width: \"20rem\", marginLeft: \"200px\"}}>\n                                {this.state.employee.lastName}\n                            </div>\n                        </div>\n                        <div className = \"row\">\n                            <label> Employee Email ID:</label>\n                            <div className = \"badge bg-primary text-wrap\" style = {{width: \"20rem\", marginLeft: \"200px\"}}>\n                                {this.state.employee.emailId}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import './App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport ListEmployeeComponent from './components/ListEmployeeComponent';\nimport HeaderComponent from './components/HeaderComponent';\nimport FooterComponent from './components/FooterComponent';\nimport CreateEmployeeComponent from './components/CreateEmployeeComponent';\nimport ViewEmployeeComponent from './components/ViewEmployeeComponent';\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n         <HeaderComponent/>\n            <div className=\"container\">\n              <Switch>\n                  <Route path = \"/\" exact component = {ListEmployeeComponent}></Route>\n                  <Route path = \"/employees\" component = {ListEmployeeComponent}></Route>\n                  <Route path = \"/add-employee/:id\" component = {CreateEmployeeComponent}></Route>\n                  {/* <Route path = \"/update-employee/:id\" component = {UpdateEmployeeComponent}></Route> */}\n                  <Route path = \"/view-employee/:id\" component = {ViewEmployeeComponent}></Route>\n             </Switch>\n            </div>\n        <FooterComponent/>\n      </Router>\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}